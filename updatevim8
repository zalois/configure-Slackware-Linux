#!/bin/bash
#should  run by root
#by 229 10/Februrary/2018
VIMBRANCH=8.0
CTAGSVER=5.8
BUILD=${BUILD:-1}
TMP=${TMP:-/tmp}
#cpath=$(cd $(dirname $0);pwd)'/'
cpath='/media/sdb7/software/editor/vim/'
pt=${cpath}'vimSlackBuild/'
cpt='/media/sdc1/sysbak/slconfig/vimConfigure/'
cptf='update_vimrc_tex_asy_pascal_delek-DarkGrey.sh'
#fetch the latest vim source archive from github branch
#the code is copied from the offical vim slackbuild script
  VERSION="$(echo $(basename $(wget -q -O - https://github.com/vim/vim/releases | grep href.*v${VIMBRANCH} | head -n 1 | cut -f 2 -d \" )) | cut -b2- )"
  ( lftpget https://github.com/vim/vim/archive/v${VERSION}.tar.gz
    gzip -d v${VERSION}.tar.gz
    mv v${VERSION}.tar vim-${VERSION}.tar
    lzip -9 -v vim-${VERSION}.tar
    if [ ! -r vim-${VERSION}.tar.lz ]; then
      echo "ERROR:  Something went wrong trying to fetch https://github.com/vim/vim/archive/v${VERSION}.tar.gz"
      exit 1
    fi
  ) || exit 1
# Automatically determine the architecture we're building on:
if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) export ARCH=i586 ;;
    arm*) export ARCH=arm ;;
    # Unless $ARCH is already set, use uname -m for all other archs:
       *) export ARCH=$( uname -m ) ;;
  esac
fi
mv vim-${VERSION}.tar.lz ${pt}
cd ${pt}
sh ${pt}vim.SlackBuild
sh ${pt}vim-gvim.SlackBuild
sudo /sbin/upgradepkg ${TMP}/vim-${VERSION}-${ARCH}-${BUILD}.txz
sudo /sbin/upgradepkg ${TMP}/vim-gvim-${VERSION}-${ARCH}-${BUILD}.txz
#configure vim
cd ${cpt}
sh ${cpt}${cptf}
#deal with vim packages
mv ${pt}vim-${VERSION}.tar.?z  ${cpath}
chown 000:000 ${cpath}vim-${VERSION}.tar.?z
mv ${TMP}/vim-${VERSION}-${ARCH}-${BUILD}.txz ${cpath}"diyBuild/"
mv ${TMP}/vim-gvim-${VERSION}-${ARCH}-${BUILD}.txz ${cpath}"diyBuild/"
chown 000:000 ${cpath}"diyBuild/"vim-${VERSION}-${ARCH}-${BUILD}.txz
chown 000:000 ${cpath}"diyBuild/"vim-gvim-${VERSION}-${ARCH}-${BUILD}.txz
echo "vim updated successfully."
exit 1
